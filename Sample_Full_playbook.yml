---
- name: Security Assessment Playbook
  hosts: all
  gather_facts: no
  vars:
    task_weights:
      determine_node_is_reachable: 0.05
      determine_node_is_scannable: 0.10
      determine_service_is_reachable: 0.10
      determine_service_is_exploitable: 0.25
      attempt_exploitation: 0.50
    total_weight: 0.0

  tasks:
    - name: Determine node is reachable
      ping:
      register: ping_result

    - name: Update weight if node is reachable
      set_fact:
        total_weight: "{{ total_weight + task_weights.determine_node_is_reachable }}"
      when: ping_result.ping

    - name: Determine node is scannable
      shell: nmap -Pn  {{ inventory_hostname }}
      register: scan_result
      ignore_errors: yes

    - name: Update weight if node is scannable
      set_fact:
        total_weight: "{{ total_weight + task_weights.determine_node_is_scannable }}"
      when: "'open' in scan_result.stdout"

    - name: Determine service is reachable
      shell: nmap -Pn -p 80 {{ inventory_hostname }}
      register: service_result
      ignore_errors: yes

    - name: Update weight if service is reachable
      set_fact:
        total_weight: "{{ total_weight + task_weights.determine_service_is_reachable }}"
      when: "'open' in service_result.stdout"

    - name: Determine service is exploitable
      shell: "check_exploit_tool {{ inventory_hostname }}"
      register: exploit_result
      ignore_errors: yes

    - name: Update weight if service is exploitable
      set_fact:
        total_weight: "{{ total_weight + task_weights.determine_service_is_exploitable }}"
      when: "'VULNERABLE' in exploit_result.stdout"

    - name: Attempt exploitation and determine success or failure
      shell: "exploit_tool {{ inventory_hostname }}"
      register: exploit_attempt
      ignore_errors: yes

    - name: Update weight if exploitation is successful
      set_fact:
        total_weight: "{{ total_weight + task_weights.attempt_exploitation }}"
      when: "'SUCCESS' in exploit_attempt.stdout"

    - name: Print final weight
      debug:
        msg: "Final Weight: {{ total_weight }}"
