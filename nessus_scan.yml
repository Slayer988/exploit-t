---
- name: Initiate Nessus Scan and Retrieve Results
  hosts: localhost
  vars:
    nessus_host: "https://10.10.100.5:8834"
    nessus_access_key: "1f65c7ce5e451f0adf5927110258d02bf02318d3e588a73116d7f8d46068c5d1"
    nessus_secret_key: "859229c2949076290f52f95be920e77c9abbf34b30b3a880c583ba70bfca0d09"
    nessus_scan_name: "Test Scan"
    target_hosts: "10.10.200.0/29" 
  tasks:
    - name: Authenticate with Nessus API
      uri:
        url: "{{ nessus_host }}/session"
        method: POST
        headers:
          X-ApiKeys: "accessKey={{ nessus_access_key }}; secretKey={{ nessus_secret_key }}"
        body_format: json
        status_code: 200
        return_content: yes
      register: auth_response

    - name: Create a new ad-hoc scan
      uri:
        url: "{{ nessus_host }}/scans"
        method: POST
        headers:
          X-ApiKeys: "accessKey={{ nessus_access_key }}; secretKey={{ nessus_secret_key }}"
        body: >
          {
            "uuid": "ad-hoc",
            "settings": {
              "name": "{{ nessus_scan_name }}",
              "text_targets": "{{ target_hosts }}"
            }
          }
        body_format: json
        status_code: 200
        return_content: yes
      register: scan_response

    - name: Launch the scan
      uri:
        url: "{{ nessus_host }}/scans/{{ scan_response.json.scan.id }}/launch"
        method: POST
        headers:
          X-ApiKeys: "accessKey={{ nessus_access_key }}; secretKey={{ nessus_secret_key }}"
        status_code: 200
        return_content: yes
      register: launch_response

    - name: Wait for scan to complete
      pause:
        minutes: 20  

    - name: Get scan results
      uri:
        url: "{{ nessus_host }}/scans/{{ scan_response.json.scan.id }}"
        method: GET
        headers:
          X-ApiKeys: "accessKey={{ nessus_access_key }}; secretKey={{ nessus_secret_key }}"
        status_code: 200
        return_content: yes
      register: scan_results

    - name: Parse and display vulnerabilities
      set_fact:
        vulnerabilities: "{{ scan_results.json.vulnerabilities }}"

    - name: Display vulnerabilities
      debug:
        msg: >
          Host: {{ item.host }}
          Service: {{ item.plugin_name }}
          CVE: {{ item.cve }}
          CVSS: {{ item.cvss }}
      loop: "{{ vulnerabilities }}"
